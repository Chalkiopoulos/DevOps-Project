name: push-workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'

jobs:
  test_encryption_code:
    environment: Testing
    runs-on: ubuntu-latest
    container: python:3.11
    steps:
      - name: get the code
        uses: actions/checkout@v4

      - name: cache and install dependecies # caching the cryptography library to accelerate jobs
        uses: ./.github/actions/cache_install_dependencies # custom action that caches and installs dependencies

      - name: test code
        run: python Scripts/test.py


  test_DB:
    runs-on: ubuntu-latest
    environment: Testing
    env:
      DB_HOST: mysqldb
      DB_PORT: "3306"
      DB_USER: root
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_NAME: devopsdb
    container: python:3.11
    services:
      mysqldb:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{secrets.DB_PASSWORD}}
          MYSQL_DATABASE: devopsdb
    steps:
  
      - name: Wait for MySQL to be ready # mySQL sometimes needs time to setup so i wait before python script tries to connect
        run: sleep 5

      - name: get the code
        uses: actions/checkout@v4

      - name: cache and install dependecies # caching the cryptography library to accelerate jobs
        uses: ./.github/actions/cache_install_dependencies # custom action that caches and installs dependencies

      - name: Install MySQL client
        run: apt-get update && apt-get install -y mariadb-client

      - name: Load schema and seed data
        run: mysql -hmysqldb -uroot -p${{secrets.DB_PASSWORD}} --ssl=0 devopsdb < ./db/schema.sql
            #here I am connecting to service container (without secure connection) to load testing data

      - name: test Database 
        run: python Scripts/database_test.py



  Build_and_upload_hashes:  #hashes work somewhat like a build that I upload as an artifact, here i also publish some output of the number of hashes
    needs: [test_encryption_code,test_DB]
    runs-on: ubuntu-latest
    container: python:3.11
    defaults:
      run:
        shell: bash
    outputs: 
      number_of_lines: ${{steps.counter.outputs.line_count}}
    steps:
      - name: get the code
        uses: actions/checkout@v4
      
      - name: cache and install dependecies # caching the cryptography library to accelerate jobs
        uses: ./.github/actions/cache_install_dependencies # custom action that caches and installs dependencies

      - name: run code # create a file of the hashes
        run: python Scripts/main.py
            
      - name: upload the hash file
        uses: actions/upload-artifact@v4
        with:
          name: 'hashes-${{ runner.os}}'
          path: ./hashed_passwords*.txt

   
  download_and_show_artifact: # this job showcases how to download artiacts and also how to get outputs from another job
    runs-on: ubuntu-latest
    container: python:3.11
    needs: Build_and_upload_hashes
    defaults:
      run:
        shell: bash
    steps:
      - name: download hashes
        uses: actions/download-artifact@v4
        with:
          name: 'hashes-${{ runner.os }}'

      - name: print_contents
        run: cat ./hashed_passwords*.txt

  fail_report:
    runs-on: Ubuntu-latest
    needs: [test_encryption_code,test_DB, Build_and_upload_hashes,download_and_show_artifact]
    if: failure()
    steps:
      - name: print the full report
        run: echo "${{toJson(github)}}"

  

      

    